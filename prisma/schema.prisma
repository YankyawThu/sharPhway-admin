generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                  String  @id
  user_id             String
  type                String
  provider            String
  provider_account_id String
  refresh_token       String?
  access_token        String?
  expires_at          Int?
  token_type          String?
  scope               String?
  id_token            String?
  session_state       String?
  User                User    @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([provider, provider_account_id])
}

model Session {
  id            String   @id
  session_token String   @unique
  user_id       String
  expires       DateTime
  User          User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model User {
  id             String    @id
  name           String?
  role           Role      @default(user)
  email          String?   @unique
  email_verified Boolean?  @default(false)
  password       String?
  image          String?
  Account        Account[]
  Session        Session[]
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@unique([identifier, token])
}

model Exchange {
  id          String    @id @default(cuid())
  currency    String
  description String?
  min         Float
  max         Float
  baseAmount  String    @map("base_amount")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model News {
  id          String    @id @default(cuid())
  title       String
  img1        String?
  img2        String?
  img3        String?
  img4        String?
  img5        String?
  content     String    @db.Text
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

enum Role {
  user
  admin
}
